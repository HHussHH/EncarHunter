import "./FiltersSystem.scss";
import {FC, ReactNode, useEffect, useState} from "react";
import {FiltersSystemInput} from "@/shared/ui/FiltersSystemInput/FiltersSystemInput.tsx";
import {useAppDispatch, useAppSelector} from "@/shared/api/types/redux.type.ts";
import {useLazyGetAllFiltersQuery} from "@/entities/Filters/api/FiltersApi.ts";
import {updateFilter} from "@/entities/cars/api/CarsSlice.ts";

interface IFiltersSystemProps {
  children?: ReactNode
}

export const FiltersSystem:FC<IFiltersSystemProps> = () => {
  const [isWide, setIsWide] = useState(window.innerWidth <= 450);
	const CARS_FILTERS = useAppSelector(state => state.cars.filters)
	const FILTERS = useAppSelector(state => state.filters.filters)
  useEffect(() => {
	const handleResize = () => setIsWide(window.innerWidth <= 450);
	window.addEventListener("resize", handleResize);
	return () => window.removeEventListener("resize", handleResize);
  }, []);


	const valueViews = (value: string, placeholder:string) => {
	  if(value){
		const arr = value.split(", ")
		return arr.length > 1 ? `${arr[0]}, +${arr.length - 1}` : arr[0]
	  }else{
		return placeholder
	  }
	}

  return (
	<article className="FiltersSystem">
		<article className="FiltersSystem__list">
		  {
			isWide &&  <FiltersSystemInput>
							üöò –í—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã
						</FiltersSystemInput>
		  }
		  <div className={'FiltersSystem__list__el'}>
			<FiltersSystemInput path={'filters.car.mark'}
								title={"–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É"}
								isMulti={true}
								isActive={!!CARS_FILTERS.car.mark}
								data={{variables:CARS_FILTERS.car.mark,options:FILTERS.car.mark}}>
			  {valueViews(CARS_FILTERS.car.mark,"–ú–∞—Ä–∫–∞")}
			</FiltersSystemInput>
		  </div>
		  <div className={'FiltersSystem__list__el'}>
		  <FiltersSystemInput
			path={'filters.car.model'}
			title={"–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª–∏"}
			isMulti={true}
			isActive={!!CARS_FILTERS.car.model}
			data={{variables:CARS_FILTERS.car.model,options:FILTERS.car.model}}>
			{valueViews(CARS_FILTERS.car.model,"–ú–æ–¥–µ–ª—å")}
		  </FiltersSystemInput>
		  </div>
		  <div className={'FiltersSystem__list__el'}>
		  <FiltersSystemInput path={'filters.car.model'}
							  title={"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç–æ–ø–ª–∏–≤–∞"}
							  isMulti={true}
							  isActive={!!CARS_FILTERS.car.model}
							  data={{variables:CARS_FILTERS.car.model,options:CARS_FILTERS.car.model.split(", ")}}>
			{CARS_FILTERS.car.model ? CARS_FILTERS.car.model : "–¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞" }
		  </FiltersSystemInput>
		  </div>
		  <div className={'FiltersSystem__list__el'}>
		  <FiltersSystemInput path={'filters.car.model'}
							  title={"–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–Ω—ã"}
							  isMulti={true}
							  isActive={!!CARS_FILTERS.car.model}
							  data={{variables:CARS_FILTERS.car.model,options:['–í1',"–í2","–í3","–í4","–í4"]}}
							  multi={{variables:['–¶–µ–Ω–∞ –æ—Ç, ‚ÇΩ',"–¶–µ–Ω–∞ –¥–æ, ‚ÇΩ"]}}/>
		  </div>
		</article>
	  	<footer className={'FiltersSystem__footer'}>
		  <button className={'FiltersSystem__footer__show'}>–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</button>
		  <section className={'FiltersSystem__footer__buttons'} >
			<button className={'FiltersSystem__footer__button'}>–°–±—Ä–æ—Å–∏—Ç—å</button>
			<button className={'FiltersSystem__footer__button'}>–ü–æ–∫–∞–∑–∞—Ç—å 2 322 –æ–±—ä—è–≤–ª–µ–Ω–∏–π</button>
		  </section>
		</footer>
	</article>
  );
};

